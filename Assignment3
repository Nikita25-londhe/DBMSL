-- Create the department table first to avoid foreign key issues
CREATE TABLE dept (
  dept_id INT PRIMARY KEY AUTO_INCREMENT,
  dept_name VARCHAR(255),
  dept_location VARCHAR(255)
);

-- Create the employee table
CREATE TABLE employee (
  emp_id INT PRIMARY KEY AUTO_INCREMENT,
  dept_id INT,
  emp_fname VARCHAR(255),
  emp_lname VARCHAR(255),
  emp_position VARCHAR(255),
  emp_salary INT,
  emp_join_date DATE,
  FOREIGN KEY (dept_id) REFERENCES dept(dept_id) ON DELETE CASCADE
);

-- Create the projects table
CREATE TABLE projects (
  proj_id INT PRIMARY KEY AUTO_INCREMENT,
  dept_id INT,
  proj_name VARCHAR(255),
  proj_location VARCHAR(255),
  proj_cost INT,
  proj_year INT,
  FOREIGN KEY (dept_id) REFERENCES dept(dept_id) ON DELETE CASCADE
);

-- Insert data into the department table
INSERT INTO dept (dept_id,dept_name, dept_location)
VALUES
  (1,'Production', 'Banglore'),
  (2,'Administration', 'Mumbai'),
  (3,'Finance', 'Pune'),
  (4,'IT', 'Pune'),
  (5,'Computer', 'Mumbai'),
  (6,'Business', 'Delhi'),
  (7,'Sales', 'Nagpur');  

-- Check data in the department table
SELECT * FROM dept;

-- Insert data into the employee table
INSERT INTO employee 
(
  dept_id,
  emp_fname,
  emp_lname,
  emp_position,
  emp_salary,
  emp_join_date
)
VALUES 
  (4, 'Nikita', 'Londhe', 'Project Manager', 100000, '2024-02-05'),
  (1, 'Ajinkya', 'Shah', 'Manager', 800000, '2022-06-12'),
  (3, 'Aditya', 'Joshi', 'Accountant', 500000, '1982-08-12'),
  (2, 'Amit', 'Vora', 'HR Manager', 700000, '1983-02-15'),
  (4, 'Sneha', 'Joshi', 'Software Engineer', 90000, '2024-11-20'),
  (5, 'Priya', 'Shukla', 'Graphics Designer', 600000, '1980-07-10'),
  (6, 'Rahul', 'Gupta', 'Business Analyst', 750000, '2024-04-30');

-- Check data in the employee table
SELECT * FROM employee;

-- Insert data into the projects table
INSERT INTO projects (
    ->   dept_id,
    ->   proj_name,
    ->   proj_location,
    ->   proj_cost,
    ->   proj_year
    -> )
    -> VALUES 
    ->   (4, 'Development of E-Commerce website', 'Pune', 50000, 2004),
    ->   (1, 'Design of New Products', 'Bangalore', 75000, 2005),
    ->   (3, 'Financial Analysis System', 'Mumbai', 40000, 2022),
    ->   (2, 'HR Training Program', 'Mumbai', 20000, 2023),
    ->   (4, 'IT System Upgrade', 'Pune', 60000, 2024),
    ->   (5, 'Computer Graphics Animation', 'Mumbai', 35000, 2023),
    ->   (6, 'Business Expansion Plan', 'Nashik', 80000, 2007),
    ->   (7, 'Sales Strategy Revamp', 'Nagar', 30000, 2023);

-- Check data in the projects table
SELECT * FROM projects;

-- Que2 Find the emp_fname,Emp_position,location,Emp_JoinDate who have same Dept id.
select emp_fname,emp_position,emp_join_date,dept_id from employee group by dept_id;
-- Que3 Find the Employee details ,Proj_id,Project cost who does not have Project
--location as ‘Pune’.
  select e1.*,p1.proj_id,p1.proj_cost from employee as e1 left join projects as p1 on e1.dept_id=p1.dept_id where proj_location<>'Pune';
-- Que4 Find Department Name ,employee name, Emp_position for which project year
--is 2020,
select e1.dept_id,e1.emp_fname,e1.emp_position,p1.proj_year from employee as e1 right join projects as p1 on e1.dept_id=p1.dept_id;
--Display emp_position,D_name who have Project cost >30000
SELECT  distinct e1.emp_position,d1.dept_name FROM employee as e1  NATURAL JOIN dept as d1 NATURAL JOIN projects as p1 WHERE p1.proj_cost > 3000;

--Que 5 Find the names of all the Projects that started in the year 2015.
select proj_name from projects where proj_year=2015;
