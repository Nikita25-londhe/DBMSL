package assignment12;

import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import java.util.Iterator;
import org.bson.Document;
import com.mongodb.MongoClient;
import com.mongodb.MongoCredential;

public class Demo {
    public static void main(String[] args) {
        try {
            // Create a Mongo client with IP address and port
            MongoClient mongo = new MongoClient("10.10.13.97", 27017);

            // If authentication is required, create a credential
            MongoCredential credential = MongoCredential.createCredential("username", "te31241_db", "password".toCharArray());

            System.out.println("Connected to the database successfully");

            // Access the database
            MongoDatabase db = mongo.getDatabase("te31241_db");

            // Creating a collection
            db.createCollection("students");

            // Access the collection
            MongoCollection<Document> collection = db.getCollection("students");

            // Insert document into collection
            Document doc = new Document("name", "James");
            doc.append("age", 30);
            doc.append("Branch", "Computer");
            doc.append("city", "Pune");
            doc.append("CGPA", 8.7);
            collection.insertOne(doc);

            // Retrieving all documents from collection
            FindIterable<Document> iterDoc = collection.find();

            // Getting the iterator
            Iterator<Document> it = iterDoc.iterator();
            while (it.hasNext()) {
                System.out.println(it.next());
            }

            // Updating the document
            collection.updateOne(Filters.eq("name", "James"), Updates.set("CGPA", 8.9));

            // Deleting the documents
            collection.deleteOne(Filters.eq("city", "Pune"));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
output:
Document{{_id=6704b2d1feb1b870fa65b5f1, name=James, age=30, Branch=Computer, city=Pune, CGPA=8.7}}
