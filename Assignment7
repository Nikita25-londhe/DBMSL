
create table Library
(
  id int primary key,
  name varchar(25),
  author varchar(25)
);
create table Library_Audit
(
  id int primary key auto_increment,
  book_id int,
  name varchar(25),
  author varchar(25),
  action_type varchar(25),
  action_time timestamp default current_timestamp
);
delimiter //
create trigger before_insert before insert on Library
for each row
begin
if new.id<0 then 
signal sqlstate '45000' set message_text="ID Can't be negative";
end if;
if new.name is NULL or new.name="" then 
signal sqlstate '45000' set message_text="Name can't be Null";
end if;
 end//
 delimiter ;
 delimiter //
create trigger after_insert after insert on Library for each row
begin
insert into library_audit (book_id,name,author,action_type)values(new.id,new.name,new.author,"insert");
end//
delimiter ; 
insert into Library
values(1,"abc","me"),
(2,"My Got","James"),
(3,"My dream Phone pay","Nikita");
select * from Library;
select* from library_audit;
delimiter //
create trigger before_update before update on Library for each row
begin
if new.id<0 then 
signal sqlstate '45000' set message_text="ID Can't be negative";
end if;
if new.name is NULL or new.name="" then 
signal sqlstate '45000' set message_text="Name can't be Null";
end if;
end//
delimiter ;
delimiter //
create trigger after_update after update on Library for each row
begin
update library_audit set book_id=new.id,name=new.name,author=new.author,action_type="update" where book_id=old.id;
end//
delimiter ;

update Library set name="xyz" where id=1;
delimiter //
create trigger before_delete
before delete on Library
for each row
begin
insert into library_audit(book_id,name,author,action_type) values(old.id,old.name,old.author,"delete");
end//
delimiter ;
delimiter //
create trigger after_delete
after delete on Library
for each row
begin
signal sqlstate '45000' set message_text="Deleteed";
end//
delimiter ;
delete from library where id=1;
select * from library_audit;
